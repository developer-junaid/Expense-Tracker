{"version":3,"sources":["images/coins.svg","functions/TransactionReducer.js","context/TransactionContext.js","components/Child.js","firebase.js","App.js","index.js","swDev.js"],"names":["module","exports","TransactionReducer","state","action","type","payload","initialTransactions","TransactionContext","createContext","TransactionProvider","children","useReducer","dispatch","Provider","value","transactions","addTransaction","transactionObj","text","amount","Child","useContext","useState","newAmount","setAmount","newText","setText","additionHandler","Number","alert","getIncome","income","i","length","getExpense","expense","className","src","coins","alt","map","transaction","index","key","onChange","event","target","required","placeholder","onClick","preventDefault","href","rel","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","messaging","requestPermission","then","getToken","token","prompt","Main","ReactDOM","render","document","querySelector","swDev","process","navigator","window","addEventListener","serviceWorker","register","reg","console","log","scope","catch","err"],"mappings":"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","file":"static/js/main.a17110f5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coins.e505caba.svg\";","const TransactionReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TRANSACTION\":\n      return [action.payload, ...state];\n    default:\n      return state;\n  }\n};\n\nexport default TransactionReducer;\n\n\n","import React, { createContext, useReducer } from \"react\";\nimport TransactionReducer from \"../functions/TransactionReducer\";\n\n// Make an array of transaction objects\nconst initialTransactions = [];\n\n// Create the context and export it\nexport const TransactionContext = createContext(initialTransactions);\n\n// Create provider\nexport const TransactionProvider = ({ children }) => {\n  // Use Reducer\n  let [state, dispatch] = useReducer(TransactionReducer, initialTransactions);\n\n  //Function  Add transaction\n  function addTransaction(transactionObj) {\n    dispatch({\n      type: \"ADD_TRANSACTION\",\n      payload: {\n        text: transactionObj.text,\n        amount: transactionObj.amount,\n      },\n    });\n  }\n\n  return (\n    <TransactionContext.Provider\n      value={{\n        transactions: state,\n        addTransaction,\n      }}\n    >\n      {children}\n    </TransactionContext.Provider>\n  );\n};\n","import React, { useContext, useState } from \"react\"\nimport \".././App.css\"\nimport { TransactionContext } from \"../context/TransactionContext\"\nimport coins from \".././images/coins.svg\"\n\nfunction Child() {\n  // Use context to get transactions array\n  let { transactions, addTransaction } = useContext(TransactionContext)\n\n  // Add states for inputs\n  var [newAmount, setAmount] = useState(\"\")\n  const [newText, setText] = useState(\"\")\n\n  // Transaction addition handler function\n  const additionHandler = () => {\n    // If 0 is entered\n    if (Number(newAmount) === 0) {\n      alert(\"Please give an amount !\")\n      return false\n    }\n\n    addTransaction({\n      amount: Number(newAmount),\n      text: newText,\n    })\n\n    setText(\"\")\n    setAmount(\"\")\n  }\n\n  // Function to calculate total income\n  const getIncome = () => {\n    let income = 0\n    for (var i = 0; i < transactions.length; i++) {\n      if (transactions[i].amount > 0) income += transactions[i].amount\n    }\n    return income\n  }\n\n  // Function to calculate total income\n  const getExpense = () => {\n    let expense = 0\n    for (var i = 0; i < transactions.length; i++) {\n      if (transactions[i].amount < 0) expense += transactions[i].amount\n    }\n    return expense\n  }\n\n  const expenseHandler = (event) => {\n    event.preventDefault()\n    if (newAmount < 0) {\n      alert(\"You can't enter negative value\")\n      setAmount(\"\")\n      setText(\"\")\n      return false\n    }\n    newAmount *= -1\n    setAmount(newAmount)\n    additionHandler()\n  }\n\n  const incomeHandler = (event) => {\n    event.preventDefault()\n    if (newAmount < 0) {\n      alert(\"You can't enter negative value\")\n      setAmount(\"\")\n      setText(\"\")\n      return false\n    }\n    setAmount(newAmount)\n    additionHandler()\n  }\n\n  return (\n    <div className=\"container\">\n      {/* Heading */}\n      <header>\n        <h1 className=\"text-center main-heading\">\n          <img className=\"icon\" src={coins} alt=\"Coin\" />\n          <br /> Expense Tracker\n        </h1>\n        <hr />\n      </header>\n\n      {/* Balance, income and expense */}\n      <section>\n        <h3 className=\"balance-heading\">\n          YOUR BALANCE <br />{\" \"}\n          <span className=\"balance\">${getIncome() + getExpense()}</span>\n        </h3>\n\n        <div className=\"income-expense-container\">\n          <h4>\n            INCOME <br /> <span className=\"income\">${getIncome()}</span>{\" \"}\n          </h4>\n          <h4>\n            EXPENSE <br /> <span className=\"expense\">${getExpense()}</span>{\" \"}\n          </h4>\n        </div>\n      </section>\n\n      <br />\n\n      {/* History */}\n      <section>\n        <h3>History</h3>\n        <hr />\n        <ul className=\"history-list\">\n          {/* Include values from transactions array from context*/}\n          {transactions.map((transaction, index) => (\n            <li key={index}>\n              <span>{transaction.text}</span>\n              <span>${transaction.amount}</span>\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      <br />\n\n      {/* Add Transaction */}\n      <section>\n        <h3>Add New Transaction</h3>\n        <hr />\n\n        {/* FORM */}\n        <form className=\"transaction-form\">\n          <label>\n            <span className=\"label\">Text</span>\n            <br />\n            <input\n              onChange={(event) => setText(event.target.value)}\n              required\n              value={newText}\n              type=\"text\"\n              placeholder=\"Enter text...\"\n            />\n          </label>\n\n          <br />\n          <br />\n\n          <label>\n            <span className=\"label\">Amount</span>\n            <br />\n            <input\n              onChange={(event) => setAmount(event.target.value)}\n              required\n              value={newAmount}\n              type=\"number\"\n              placeholder=\"Enter amount...\"\n            />\n          </label>\n\n          <br />\n          <div className=\"buttons-section\">\n            <button\n              className=\"submit-btn\"\n              type=\"submit\"\n              onClick={incomeHandler}\n            >\n              Add Income\n            </button>\n            <button\n              className=\"submit-btn\"\n              type=\"submit\"\n              onClick={expenseHandler}\n            >\n              Add Expense\n            </button>\n          </div>\n        </form>\n      </section>\n      <footer>\n        <hr />\n        <span className=\"signature\">\n          {\" \"}\n          Developed By{\" \"}\n          <a\n            href=\"https://github.com/qjunaid623/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Junaid Qureshi\n          </a>\n        </span>\n      </footer>\n    </div>\n  )\n}\n\nexport default Child\n","import firebase from \"firebase\"\n\nconst config = {\n  // Your web app's Firebase configuration\n  apiKey: \"AIzaSyBzE0c-vSuFtTSg9jrQJNIDZmMSs2kzKfs\",\n  authDomain: \"your-expense-tracker.firebaseapp.com\",\n  databaseURL: \"https://your-expense-tracker.firebaseio.com\",\n  projectId: \"your-expense-tracker\",\n  storageBucket: \"your-expense-tracker.appspot.com\",\n  messagingSenderId: \"676487835336\",\n  appId: \"1:676487835336:web:8ad4dd941cd8a67f97bffd\",\n}\n\nfirebase.initializeApp(config)\n\nexport default firebase\n","import React from \"react\"\nimport Child from \"./components/Child\"\nimport { TransactionProvider } from \"./context/TransactionContext\"\nimport firebase from \"./firebase\"\n\nfunction App() {\n  // Firebase Messaging\n  const messaging = firebase.messaging()\n  messaging\n    .requestPermission()\n    .then(() => messaging.getToken())\n    .then((token) => {\n      prompt(\"token\", token)\n    })\n  return (\n    <TransactionProvider>\n      <Child />\n    </TransactionProvider>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport swDev from './swDev';\n// Main Component\nfunction Main() {\n  return (\n    <div>\n      <App />\n    </div>\n  )\n}\n\nReactDOM.render(<Main />, document.querySelector(\"#root\"))\n\n// Service worker for making it PWA\nswDev()","export default function swDev(){\n    let swDev = `${process.env.PUBLIC_URL}/serviceworker.js`\n    if ('serviceWorker' in navigator){\n        window.addEventListener('load', ()=>{\n          navigator.serviceWorker.register(swDev)\n          .then((reg)=>console.log(\"Success: \", reg.scope))\n          .catch((err)=>console.log(\"Failure: \", err))\n        })\n      }\n \n}"],"sourceRoot":""}