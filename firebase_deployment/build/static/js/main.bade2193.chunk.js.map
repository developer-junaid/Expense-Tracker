{"version":3,"sources":["components/Header.js","functions/TransactionReducer.js","context/TransactionContext.js","components/Balance.js","components/History.js","container/Main.js","firebase.js","App.js","index.js","swDev.js"],"names":["Header","className","TransactionReducer","state","action","type","payload","initialTransactions","TransactionContext","createContext","TransactionProvider","children","useReducer","dispatch","Provider","value","transactions","addTransaction","transactionObj","text","amount","Balance","useContext","useState","newText","setText","newAmount","setAmount","additionHandler","Number","alert","getIncome","income","i","length","getExpense","expense","htmlFor","id","autoFocus","required","placeholder","onChange","event","target","onClick","preventDefault","History","map","transaction","index","listClass","key","Footer","lazy","Main","fallback","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","messaging","requestPermission","then","getToken","token","localStorage","setItem","JSON","stringify","catch","err","console","warn","ReactDOM","render","document","querySelector","swDev","process","navigator","window","addEventListener","serviceWorker","register","reg","log","scope"],"mappings":"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","file":"static/js/main.bade2193.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./../styles/css/header.css\"\n\nconst Header = () => {\n  return (\n    <div className=\"header-container\">\n      {/* Heading */}\n      <div className=\"logo\"></div>\n      <h1>Your Expense Tracker</h1>\n    </div>\n  )\n}\n\nexport default Header\n","const TransactionReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_TRANSACTION\":\n      return [action.payload, ...state];\n    default:\n      return state;\n  }\n};\n\nexport default TransactionReducer;\n\n\n","import React, { createContext, useReducer } from \"react\";\nimport TransactionReducer from \"../functions/TransactionReducer\";\n\n// Make an array of transaction objects\nconst initialTransactions = [];\n\n// Create the context and export it\nexport const TransactionContext = createContext(initialTransactions);\n\n// Create provider\nexport const TransactionProvider = ({ children }) => {\n  // Use Reducer\n  let [state, dispatch] = useReducer(TransactionReducer, initialTransactions);\n\n  //Function  Add transaction\n  function addTransaction(transactionObj) {\n    dispatch({\n      type: \"ADD_TRANSACTION\",\n      payload: {\n        text: transactionObj.text,\n        amount: transactionObj.amount,\n      },\n    });\n  }\n\n  return (\n    <TransactionContext.Provider\n      value={{\n        transactions: state,\n        addTransaction,\n      }}\n    >\n      {children}\n    </TransactionContext.Provider>\n  );\n};\n","import React, { useContext, useState } from \"react\"\nimport \"./../styles/css/balance.css\"\nimport { TransactionContext } from \"./../context/TransactionContext\"\n\nconst Balance = () => {\n  let { transactions, addTransaction } = useContext(TransactionContext)\n  const [newText, setText] = useState(\"\")\n  let [newAmount, setAmount] = useState(\"\")\n\n  // Transaction addition handler function\n  const additionHandler = () => {\n    // If 0 is entered\n    if (Number(newAmount) === 0) {\n      alert(\"Please give an amount !\")\n      return false\n    }\n\n    addTransaction({\n      amount: Number(newAmount),\n      text: newText,\n    })\n\n    setText(\"\")\n    setAmount(\"\")\n  }\n\n  const expenseHandler = (event) => {\n    event.preventDefault()\n    if (newAmount < 0) {\n      alert(\"You can't enter negative value\")\n      setAmount(\"\")\n      setText(\"\")\n      return false\n    }\n    newAmount *= -1\n    setAmount(newAmount)\n    additionHandler()\n  }\n\n  const incomeHandler = (event) => {\n    event.preventDefault()\n    if (newAmount < 0) {\n      alert(\"You can't enter negative value\")\n      setAmount(\"\")\n      setText(\"\")\n      return false\n    }\n    setAmount(newAmount)\n    additionHandler()\n  }\n\n  // Function to calculate total income\n  const getIncome = () => {\n    let income = 0\n    for (var i = 0; i < transactions.length; i++) {\n      if (transactions[i].amount > 0) income += transactions[i].amount\n    }\n    return income\n  }\n\n  // Function to calculate total income\n  const getExpense = () => {\n    let expense = 0\n    for (var i = 0; i < transactions.length; i++) {\n      if (transactions[i].amount < 0) expense += transactions[i].amount\n    }\n    return expense\n  }\n\n  return (\n    <div className=\"balance-container\">\n      <h1 className=\"balance-heading\">\n        Current Balance : <span>${getIncome() + getExpense()}</span>\n      </h1>\n\n      <div className=\"income-expense-container\">\n        <h2 className=\"income\">\n          Income <br /> <span>${getIncome()}</span>\n        </h2>\n        <h2 className=\"expense\">\n          Expense <br /> <span className=\"dollar\">${getExpense()}</span>\n        </h2>\n      </div>\n\n      <form className=\"transaction-form\">\n        <label htmlFor=\"text\">Text </label>\n        <input\n          id=\"text\"\n          autoFocus\n          required\n          type=\"text\"\n          placeholder=\"Enter text...\"\n          onChange={(event) => setText(event.target.value)}\n          value={newText}\n        />\n\n        <label htmlFor=\"amount\">Amount</label>\n        <input\n          required\n          id=\"amount\"\n          type=\"number\"\n          placeholder=\"Enter amount...\"\n          onChange={(event) => setAmount(event.target.value)}\n          value={newAmount}\n        />\n        <br />\n        <div className=\"buttons-section\">\n          <button\n            className=\"submit-btn add-income-btn\"\n            type=\"submit\"\n            onClick={incomeHandler}\n          >\n            Add Income\n          </button>\n          <button\n            className=\"submit-btn add-expense-btn\"\n            type=\"submit\"\n            onClick={expenseHandler}\n          >\n            Add Expense\n          </button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default Balance\n","import React, { useContext } from \"react\"\nimport \"./../styles/css/history.css\"\nimport { TransactionContext } from \"./../context/TransactionContext\"\n\nconst History = () => {\n  let { transactions } = useContext(TransactionContext)\n\n  return (\n    <div className=\"history-container\">\n      <div className=\"history-card\">\n        <div className=\"list\">\n          <ul className=\"history-list\">\n            {/* Include values from transactions array from context*/}\n            {transactions.map((transaction, index) => {\n              // Income and expense list item logic\n              let listClass = transaction.amount > 0\n\n              return (\n                <li className={listClass ? \"income-item\" : \"expense-item\"} key={index}>\n                  <span>{transaction.text}</span>\n                  <span>${transaction.amount}</span>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n        <div className=\"heading\">\n          <h3>History</h3>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default History\n","import React, { Suspense, lazy } from \"react\"\nimport Header from \"../components/Header\"\nimport Balance from \"../components/Balance\"\nimport History from \"../components/History\"\n// import Footer from \"../components/Footer\"\nimport { TransactionProvider } from \"../context/TransactionContext\"\nimport \"./../styles/css/main.css\"\n\nconst Footer = lazy(() => import(\"../components/Footer\"))\n\nconst Main = () => {\n  return (\n    <div className=\"main\">\n      <TransactionProvider>\n        <Header />\n        <Balance />\n        <History />\n        <Suspense fallback={<div />}>\n          <Footer />\n        </Suspense>\n      </TransactionProvider>\n    </div>\n  )\n}\n\nexport default Main\n","import firebase from \"firebase\"\n\nconst config = {\n  // Your web app's Firebase configuration\n  apiKey: \"AIzaSyBzE0c-vSuFtTSg9jrQJNIDZmMSs2kzKfs\",\n  authDomain: \"your-expense-tracker.firebaseapp.com\",\n  databaseURL: \"https://your-expense-tracker.firebaseio.com\",\n  projectId: \"your-expense-tracker\",\n  storageBucket: \"your-expense-tracker.appspot.com\",\n  messagingSenderId: \"676487835336\",\n  appId: \"1:676487835336:web:8ad4dd941cd8a67f97bffd\",\n}\n\nfirebase.initializeApp(config)\n\nexport default firebase\n","import React from \"react\"\nimport Main from \"./container/Main\"\nimport firebase from \"./firebase\"\n\nfunction App() {\n  // Firebase Messaging\n  const messaging = firebase.messaging()\n  messaging\n    .requestPermission()\n    .then(() => messaging.getToken())\n    .then((token) => {\n      // prompt(\"token\", token)\n      localStorage.setItem(\"token\", JSON.stringify(token))\n    })\n    .catch((err) => {\n      console.warn(\"Notifications blocked !\")\n    })\n\n  return <Main />\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport swDev from \"./swDev\"\n// Main Component\nfunction Main() {\n  return (\n    <div>\n      <App />\n    </div>\n  )\n}\n\nReactDOM.render(<Main />, document.querySelector(\"#root\"))\n\n// Service worker for making it PWA\nswDev()\n","export default function swDev() {\n  let swDev = `${process.env.PUBLIC_URL}/serviceworker.js`\n  if (\"serviceWorker\" in navigator) {\n    window.addEventListener(\"load\", () => {\n      navigator.serviceWorker\n        .register(swDev)\n        .then((reg) => console.log(\"Registered Service worker: \", reg.scope))\n        .catch((err) => console.log(\"Couldn't register Service worker: \", err))\n    })\n  }\n}\n"],"sourceRoot":""}